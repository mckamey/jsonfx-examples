<%@ Control Name="Calendar.MonthGrid" Language="JavaScript" %>

<script type="text/javascript">
	var today = Date.today();

	this.findEvents = function(/*Date*/ date, /*Events[]*/ events) {
		var items = [],
			start = date.clone().clearTime(),
			end = date.clone().set( {
				hour: 23,
				minute: 59,
				second: 59
			});
		
		for (var i=0; i<events.length; i++) {
			if (events[i].Starting.between(start, end) ||
				events[i].Ending.between(start, end)) {
				items.push(events[i]);
			}
		}

		return items;
	};

	this.buildMonth = function(/*Date*/ date, /*Events[]*/ events) {
		if (!(date instanceof Date)) {
			date = new Date();
		}

		var	current = date.clone().moveToFirstDayOfMonth(),
			last = date.clone().moveToLastDayOfMonth().moveToDayOfWeek(0),
			month = [],
			week;

		if (current.getDay()) {
			current.moveToDayOfWeek(0, -1);
		}

		for (; current.isBefore(last); current.addDays(1)) {
			if (!current.getDay()) {
				// Each sunday start a new week
				week = {
					days: []
				};
				month.push(week);
			}

			var day = {
				Date: current.clone(),
				Events: this.findEvents(current, events)
			};
			week.days.push(day);
		}

		return month;
	};

	this.getCss = function(/*Date*/ date, /*int*/ dayOfWeek) {
		date = date.clone().clearTime();
		var css = "day-of-week-"+String(dayOfWeek);

		if (Calendar.MonthGrid.data.SelectedDate.equals(date)) {
			css += " selected";
		}

		if (today.equals(date)) {
			css += " today";
		}

		if (Calendar.MonthGrid.data.StartRange.isAfter(date)) {
			css += " prev-month";
		} else if (Calendar.MonthGrid.data.EndRange.isBefore(date)) {
			css += " next-month";
		}

		return css;
	};

	this.resize = function() {
		var elem = $(this);

		function resize() {
			var h = document.body.offsetHeight;
			h -= $("h1").height();
			elem.height(h);
		}
		
		resize();
		$(window).resize(resize);
	};

</script>

<div class="month-view">

<h1><%= this.data.SelectedDate.toString("MMMM yyyy") %></h1>

<table jbst:oninit="<%= this.resize %>">
	<tr>
		<th>Sunday</th>
		<th>Monday</th>
		<th>Tuesday</th>
		<th>Wednesday</th>
		<th>Thursday</th>
		<th>Friday</th>
		<th>Saturday</th>
	</tr>

<jbst:control data="<%= this.buildMonth(this.data.SelectedDate, this.data.Items) %>">
	<tr>

		<jbst:control data="<%= this.data.days %>">

			<td class="<%= Calendar.MonthGrid.getCss(this.data.Date, this.index) %>">
				<h3><%= this.data.Date.getDate().toString() %></h3>
				<ul jbst:visible="<%= !!this.data.Events.length %>">

				<jbst:control data="<%= this.data.Events %>">
					<li title="<%= "(" + this.data.Starting.toString("yyyy-MM-dd HH:mm:ss") + " to " + this.data.Ending.toString("yyyy-MM-dd HH:mm:ss") + ")" %>">
						<%= this.data.Label %>
					</li>
				</jbst:control>

				</ul>
			</td>

		</jbst:control>

	</tr>
</jbst:control>

</table>

</div>

<jbst:control name="Calendar.EventList" data="<%= this.findEvents(this.data.SelectedDate, this.data.Items) %>" />
