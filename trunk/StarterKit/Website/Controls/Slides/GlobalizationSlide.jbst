<%@ Control Name="Example.globalizationSlide" Language="JavaScript" %>

<jbst:Control jbst:Name="Example.jsonfxInfo" />

<jbst:Control jbst:Name="Example.slideFrame">
	<h2><%$ Resources: i18n %></h2>

	<p>The process of internationalization (abbreviated "i18n") involves designing a software application so that it can be adapted to various languages and regions without engineering changes.  ASP.NET has great resource string management tools, but they aren't accessible from JavaScript.</p>
	<p>JsonFx enables the familiar ASP.NET declarative syntax to client-side templating for both local resources as well as global resources using standard ASP.NET syntax:</p>

	<p class="Example">
		<strong>Global resource string</strong>:
		<code class="Syntax" style="display:inline-block"><span class="Serv">&lt;%</span><span class="Key">$</span> Resources: Example, g11n <span class="Serv">%&gt;</span></code>
		resolves to
		"<code><%$ Resources: Example, g11n %></code>"
	</p>

	<p class="Example">
		<strong>Local resource string</strong>:
		<code class="Syntax" style="display:inline-block"><span class="Serv">&lt;%</span><span class="Key">$</span> Resources: i18n <span class="Serv">%&gt;</span></code>
		resolves to
		"<code><%$ Resources: i18n %></code>"
	</p>

	<p>Alternatively, you may need to access resource strings directly from client script.  The JsonFx.Lang singleton contains access methods to resolve these at runtime:</p>

	<p class="Example">
		<strong>Global resource string</strong>:
		<code class="Syntax" style="display:inline-block">JsonFx.Lang.get(<span class="Lit">"Example, g11n"</span>);</code>
		resolves to
		"<code><%= JsonFx.Lang.get("Example, g11n"); %></code>"
	</p>

	<p class="Example">
		<strong>Local resource string</strong> (must be namespaced to control):
		<code class="Syntax" style="display:inline-block">JsonFx.Lang.get(<span class="Lit">"/Controls/Slides/GlobalizationSlide.jbst, i18n"</span>);</code>
		resolves to
		"<code><%= JsonFx.Lang.get("/Controls/Slides/GlobalizationSlide.jbst, i18n"); %></code>"
	</p>

	<h2><%$ Resources: L10n %></h2>

	<p>The process of localization (abbreviated "L10n") is the process of adapting software for a specific region or language by adding locale-specific components and translating text.</p>
	<p>Localization in JsonFx is exactly the same as traditional ASP.NET.  JsonFx leverages all the tools and techniques of *.resx files and satellite assemblies.  JsonFx supports both resource files in App_LocalResources as well as App_GlobalResources.</p>

</jbst:Control>